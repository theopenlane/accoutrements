steps:
  - group: ":test_tube: Tests"
    key: "tests"
    steps:
      - label: ":golang: go test - libsql"
        key: "go_test_libsql"
        retry:
          automatic:
            - exit_status: "*"
              limit: 2
        cancel_on_build_failing: true
        env:
          TEST_DB_URL: "libsql://file::memory:?cache=shared"
        plugins:
          - docker#v5.11.0:
              image: golang:1.22.5
              command: ["go", "test", "-coverprofile=coverage.out", "./..."]
              environment:
                - "TEST_DB_URL"
        artifact_paths: ["coverage.out"]
      - label: ":golang: go test - {{matrix}}"
        key: "go_test"
        retry:
          automatic:
            - exit_status: "*"
              limit: 2
        env:
          TEST_DB_URL: "{{matrix}}"
        matrix:
          - "docker://postgres:16-alpine"
          - "docker://postgres:15-alpine"
          - "sqlite://file:ent?mode=memory&cache=shared"
        plugins:
          - docker#v5.11.0:
              image: golang:1.22.5
              command: ["go", "test", "-coverprofile=coverage.out", "./..."]
              environment:
                - "TEST_DB_URL"
                - "TEST_DB_CONTAINER_EXPIRY=8" # container expiry in minutes
                - "TEST_DB_HOST=172.17.0.1" # docker host ip on linux
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock"
        artifact_paths: ["coverage.out"]
      - label: ":auth0: fga model test"
        key: "fga_test"
        plugins:
          - docker#v5.11.0:
              image: openfga/cli
              command: ["model", "test", "--tests", "fga/tests/tests.yaml"]